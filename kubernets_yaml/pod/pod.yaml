apiVersion: v1                # 资源类型 kubectl  api-resources:可以获取到所有资源 和 资源的版本
kind: Pod                     # 同一个资源可能有很多的版本。
metadata:                     # 每一个资源定义一些元数据信息
  name: "mynginx1"            # 指定pod的名称
  namespace: default          # 指定pod所属名称空间
  labels:               
    app: "mynginx1"      # 设置pod标签的 键值对
spec:
  imagePullSecrets:                 # 指定镜像的下载密钥
    - name: my-aliyun               # 这是kubectl  create  secrete  创建的pod名称
    - name: key-02
  containers:
  - name: mynginx1          # 容器1
    image: "nginx:1.9"           # 指定使用的镜像
    imagePullPolicy: Always      # 镜像下载策略，（默认策略：Always ： 只会去下载镜像）
  - env:                                #设置环境变量，并且在下面可以用变量的方式调用 
    - name: MYSQL_ROOT_PASSWORD            # 变量名
      volue: "123.com"                     # 变量值
    - name: zhangsan
      volue: "boy"
  
  - name: mynginx2          # 容器2
    image:  registry.cn-hangzhou.aliyuncs.com/lfy/java-devops-demo:v1.0                        #  "个人私有仓库地址ip或域名/liuwei/镜像名称:版本号  使用私有仓库需要创建镜像下载密钥pod"
    imagePullPolicy: IfNotPresent   # 优先使用本地镜像，本地无镜像则下载镜像    
  
  - name: my-command-test   # 容器3
    image: "nginx:1.9"
    command:             # 容器的启动命令将会以这里为准。
      - /bin/sh
      - -c
      - "echo ${msg};sleep 3600"
      - -name: msg
        value: "hello msg"
    # 直接覆盖容器的默认命令，Dockerfile  ENTRYPOINT  CMD 指定容器的启动命令

    resources: 
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 200Mi
    env:
    - name: DB_HOST
      valueFrom:
        configMapKeyRef:
          name: mynginx1
          key: DB_HOST
    ports:
    - containerPort:  80   # 容器开放的端口
      name:  http

    volumeMounts:                # 容器内部挂载
    - name: localtime            # 挂载名称要和 volumes 中指定的名称一样
      mountPath: /etc/localtime  # 容器内挂载的路径

  volumes:                             # 设置pod所在节点的挂载路径
    - name: localtime                  # 名称要与所需挂载的容器中的volumeMounts中指定的名称一样
      hostPath:                        # 使用hostpath方式手动指定宿主机挂载路径
        path: /usr/share/zoneinfo/Asia/Shanghai      # 宿主机挂载路径
  restartPolicy: Always    # pod的重启策略