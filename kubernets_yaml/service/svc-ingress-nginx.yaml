# https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource

# 裸金属安装
# https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal-clusters





apiVersion: networking.k8s.io/v1
kind: Ingress  # 代表nginx的一项配置
metadata:
  name: hello-ingress
  namespace: default
spec:
  rules:
  - host: it666.com  # 指定监听的主机域名 
    http:   # 指定路由规则
      paths:
      - path: /  # it666.com/abc 也可以 (域名+path路径=访问下面指定的service的端口服务)
        pathType: Prefix
        backend:     # 指定路由的后台服务名的service域名及端口
          service:
            name: cluster-ingress-1
            port:
              number: 80
      
      - path: /abc
        pathType: Prefix
        backend:     # 指定路由的后台服务名的service域名及端口
          service:
            name: cluster-ingress-2
            port:
              number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: cluster-ingress-1
  namespace: default
spec:
  selector:
    app: cluster-ingress-1
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: cluster-ingress-1
    protocol: TCP
    port: 80
    targetPort: 80 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  cluster-ingress-deploy-1
  namespace: default
  labels:
    app:  cluster-ingress-1
spec:
  selector:
    matchLabels:
      app: cluster-ingress-1
  replicas: 1
  template:
    metadata:
      labels:
        app:  cluster-ingress-1
    spec:
      containers:
      - name:  cluster-ingress-deploy-1
        image:  nginx
        imagePullPolicy: IfNotPresent 



---
apiVersion: v1
kind: Service
metadata:
  name: cluster-ingress-2
  namespace: default
spec:
  selector:
    app: cluster-ingress-2
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: cluster-ingress-2
    protocol: TCP
    port: 80
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  cluster-ingress-deploy-2
  namespace: default
  labels:
    app:  cluster-ingress-2
spec:
  selector:
    matchLabels:
      app: cluster-ingress-2
  replicas: 1
  template:
    metadata:
      labels:
        app:  cluster-ingress-2
    spec:
      containers:
      - name:  cluster-ingress-deploy-2
        image:  tomcat
        imagePullPolicy: IfNotPresent